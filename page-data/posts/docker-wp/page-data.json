{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/docker-wp/","webpackCompilationHash":"09a0cbe18e55be3d84c3","result":{"data":{"markdownRemark":{"id":"74032a64-695b-5d18-9e9b-33be107d1b2c","html":"<p>Docker is an open source tool for running isolated containers. Docker containers wrap up software and its dependencies into a standardized unit for software development that includes everything it needs to run: code, runtime, system tools and libraries.</p>\n<h3 id=\"docker-containers-can-be-a-true-and-efficient-productivity-booster-for-building-web-apps\"><a href=\"#docker-containers-can-be-a-true-and-efficient-productivity-booster-for-building-web-apps\" aria-label=\"docker containers can be a true and efficient productivity booster for building web apps permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker containers can be a true and efficient productivity booster for building web apps.</h3>\n<p>Docker builds a container by reading the instructions from a Dockerfile - a text file that contains all commands - in order, needed to build a given image.\nThe same container that the developer builds and tests on his PC can run in production, on VMs, in the cloud and a lot more places</p>\n<h3 id=\"well-setup-a-wordpress--maria-db-development-environment-using-two-docker-containers\"><a href=\"#well-setup-a-wordpress--maria-db-development-environment-using-two-docker-containers\" aria-label=\"well setup a wordpress  maria db development environment using two docker containers permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>We’ll setup a WordPress &#x26; Maria DB development environment using two Docker containers.</h3>\n<p>Docker Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. Then, with a single command, you create and start all the services from your configuration.</p>\n<p><a href=\"https://docs.docker.com/compose/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.docker.com/compose/</a></p>\n<p>Create the Docker Compose config <code class=\"language-text\">docker-compose.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"docker\"><pre class=\"language-docker\"><code class=\"language-docker\">version<span class=\"token punctuation\">:</span> <span class=\"token string\">'3.7'</span>\n\nservices<span class=\"token punctuation\">:</span>\n    db<span class=\"token punctuation\">:</span>\n        image<span class=\"token punctuation\">:</span> mariadb<span class=\"token punctuation\">:</span>latest\n        volumes<span class=\"token punctuation\">:</span>\n          <span class=\"token punctuation\">-</span> data_db<span class=\"token punctuation\">:</span>/var/lib/mysql\n        restart<span class=\"token punctuation\">:</span> always\n        environment<span class=\"token punctuation\">:</span>\n            MYSQL_ROOT_PASSWORD<span class=\"token punctuation\">:</span> mypassword\n            MYSQL_DATABASE<span class=\"token punctuation\">:</span> wordpress\n            MYSQL_USER<span class=\"token punctuation\">:</span> wordpress\n            MYSQL_PASSWORD<span class=\"token punctuation\">:</span> wordpress\n\n    wordpress<span class=\"token punctuation\">:</span>\n        image<span class=\"token punctuation\">:</span> wordpress<span class=\"token punctuation\">:</span>latest\n        build<span class=\"token punctuation\">:</span> .\n        depends_on<span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> db\n        ports<span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span>80\n        restart<span class=\"token punctuation\">:</span> always\n        environment<span class=\"token punctuation\">:</span>\n            WORDPRESS_DB_HOST<span class=\"token punctuation\">:</span> db<span class=\"token punctuation\">:</span>3306\n            WORDPRESS_DB_USER<span class=\"token punctuation\">:</span> wordpress\n            WORDPRESS_DB_PASSWORD<span class=\"token punctuation\">:</span> wordpress\n        volumes<span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> ./config/php.conf.ini<span class=\"token punctuation\">:</span>/usr/local/etc/php/conf.d/conf.ini\n            <span class=\"token punctuation\">-</span> ./wordpress/<span class=\"token punctuation\">:</span>/var/www/html/\nvolumes<span class=\"token punctuation\">:</span>\n    data_db<span class=\"token punctuation\">:</span></code></pre></div>\n<p>We also want a configuration file to set some php variables <code class=\"language-text\">config/php.conf</code></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\">file_uploads <span class=\"token operator\">=</span> On\nmemory_limit <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token constant\">M</span>\nupload_max_filesize <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token constant\">M</span>\npost_max_size <span class=\"token operator\">=</span> <span class=\"token number\">64</span><span class=\"token constant\">M</span>\nmax_execution_time <span class=\"token operator\">=</span> <span class=\"token number\">600</span></code></pre></div>\n<p>We’re ready to start the environment. We use:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker-compose up</code></pre></div>\n<hr>\n<p>Docker WordPress Docs\n<a href=\"https://hub.docker.com/_/wordpress\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://hub.docker.com/_/wordpress</a></p>","fields":{"slug":"/posts/docker-wp/","tagSlugs":["/tag/docker/","/tag/wordpress/","/tag/maria-db/"]},"frontmatter":{"date":"2019-05-19T20:00","description":"Docker builds images automatically by reading the instructions from a Dockerfile -- a text file that contains all commands, in order, needed to build a given image","tags":["Docker","Wordpress","MariaDB"],"title":"Docker Wordpress with MariaDB","category":"DevOps"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/docker-wp/"}}}